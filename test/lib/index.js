#!/usr/bin/env node
"use strict";require("fs"),require("fs");const e=require("single-line-log").stdout,s=require("chalk");class t{constructor(e={}){this.initConfig(e)}initConfig(e){const s={duration:100,current:0,block:"█",showNumber:!0,tip:{0:"努力构建中🔧……",50:"加载一半啦，不要着急🐶……",75:"马上就加载完了😊……",100:"创建完成🎆🎉,开始搬砖吧🧱😊"},color:"blue"};Object.assign(s,e),this.config=s}run(t){const{block:n,duration:r,tip:c,color:o,showNumber:i}=this.config,a=Object.keys(c).sort(((e,s)=>parseInt(s)-parseInt(e)));let l=c[0];const p=r/100,u=Math.floor(t/p);for(let e=0;e<a.length;e++)if(u>=parseInt(a[e])){l=c[a[e]];break}e(s[o](n.repeat(Math.floor(u/2)),(i?u+"% ":"")+l)),100==u&&console.log("")}}const n=require("cli-box");const r=require("chalk"),c=require("inquirer");require("child_process");const o=require("fs");function i(e){o.existsSync(e.projectName)&&(console.log(r.red(`file ${e.projectName} already exist！！！`)),process.exit());let s=e.type.split("+");e.type=s.shift();let c,i=0,a=new t;var l;c=setInterval((()=>{a.run(i++),50==i&&clearInterval(c)}),100),console.log(r.green((l=e,new n({w:50,h:10,stringify:!1,marks:{nw:"╭",n:"─",ne:"╮",e:"│",se:"╯",s:"─",sw:"╰",w:"│"},hAlign:"center",vAlign:"center"},`\n    Create Project Success!😁\n    cd ${l.projectName}\n   \n   `)).stringify()))}const a={params:"[project-name]",description:"create a new project",action:e=>{let s=i;e?s(e):c.prompt([{type:"input",message:"项目名称:",name:"projectName",validate:e=>e&&e.trim()?!e.includes(" ")||r.red("项目名不能包含空格，请重新输入"):r.red("项目名不能为空，请重新输入")},{type:"list",message:"请选择你需要创建的模版",name:"lang",choices:["react","vue","weapp"]},{type:"list",message:"请选择你需要创建的模版",name:"type",when:e=>"weapp"===e.lang,choices:["ts","ts+less","ts+scss","js","js+less","js+scss"]},{type:"list",when:e=>"Vue"===e.lang,message:"请选择你需要创建的项目类型",name:"type",choices:["Vue-ssr","Vue-h5"]},{type:"list",when:e=>"react"===e.lang,message:"请选择你需要创建的项目类型",name:"type",choices:["pc","mini","h5"]}]).then((e=>{s(e)}))}},l=require("chalk");let p={create:a,version:{params:"[package-version]",description:"package version",action:()=>{console.log(l.green("1.0.1"))}}};const{Command:u}=require("commander"),m=new u;Reflect.ownKeys(p).map((e=>{const{params:s,action:t,description:n}=p[e]||{};m.command(`${e} ${s||""}`).description(n).action((e=>{"function"==typeof t&&t(e)}))})),m.parse(process.argv);
